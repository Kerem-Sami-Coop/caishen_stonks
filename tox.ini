# Tox configuration file
# Read more under https://tox.readthedocs.org/
# THIS SCRIPT IS SUPPOSED TO BE AN EXAMPLE. MODIFY IT ACCORDING TO YOUR NEEDS!

[tox]
minversion = 3.15
envlist = 
    default
    flake8
    codecov
    #clean
    #build
    #docs
    #doctests
#envlist = py38, py39
#envlist = py38


[testenv]
description = invoke pytest to run automated tests
isolated_build = True
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    HOME
    RAPID_API_TOKEN
extras =
    testing
commands =
    pytest {posargs:.} .
deps = 
    -rrequirements.txt


[testenv:flake8]
commands = flake8 {posargs}


[flake8]
max-line-length = 127
max-complexity = 10
ignore = E203, W503, C901, E402, B011
statistics = True
count = True
show-source = True
exclude =
    __pyache__
    .github
    .pytest_cache
    .tox
    .venv
    docs
    build
    dist
    caishen_stonks.egg-info
    .eggs

[testenv:codecov]
passenv =
    HOME
    CODECOV_TOKEN
    RAPID_API_TOKEN
commands = 
    pytest --cov=./caishen_stonks
    codecov -t "{env:CODECOV_TOKEN:}"
deps = 
    -rrequirements.txt
    

[testenv:{clean,build}]
description =
    Build (or clean) the package in isolation according to instructions in:
    https://setuptools.readthedocs.io/en/latest/build_meta.html#how-to-use-it
    https://github.com/pypa/pep517/issues/91
    https://github.com/pypa/build
# NOTE: build is still experimental, please refer to the links for updates/issues
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build .
# By default `build` produces wheels, you can also explicitly use the flags `--sdist` and `--wheel`


[testenv:{docs,doctests}]
description = invoke sphinx-build to build the docs/run doctests
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
deps =
    -r {toxinidir}/docs/requirements.txt
    # ^  requirements.txt shared with Read The Docs
commands =
    sphinx-build -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*
